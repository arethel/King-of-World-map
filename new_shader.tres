[gd_resource type="Shader" format=2]

[resource]
code = "shader_type spatial;


uniform int sides=10;
uniform sampler2D zones;
uniform float width_of_line : hint_range(0.0,0.05)=0.01;
uniform float mixing : hint_range(0.0,1.0)=0.3;

uniform vec3 brightZone=vec3(0.0,0.0,0.0);


varying vec3 vert;

vec3 get_norm_by_coord(vec2 coord){
	return vec3(floor((coord)*float(sides))/float(sides),0.0);
}
vec3 get_col_of_zone(vec2 coord){
	return texture(zones,coord).rgb;
}

void vertex(){
	float arr[3];
	vert=VERTEX*0.5+vec3(0.5);
	
	VERTEX.x*=10.0;
	VERTEX.z*=10.0;
}


void fragment(){
	float st = width_of_line;
	
	for(float i=-1.0;i<=1.0;i+=1.0){
		for(float j=-1.0;j<=1.0;j+=1.0){
			vec2 n_coord=vert.xz+vec2(st*i,st*j);
			if(get_col_of_zone(n_coord)!=get_col_of_zone(vert.xz)){
				vec2 d_rast = (get_norm_by_coord(n_coord)-get_norm_by_coord(vert.xz)).xy;
				if(length(d_rast)>1.0/float(sides)+0.01){
					vec2 norm_rast = vec2(clamp(d_rast.x,0.0,1.0),clamp(d_rast.y,0.0,1.0));
					vec2 angel_pos = get_norm_by_coord(vert.xz).xy+norm_rast;
					if(length(angel_pos-vert.xz)<st){
						ALBEDO=get_col_of_zone(vert.xz);
					}
				}
				else{
					ALBEDO = get_col_of_zone(vert.xz);
				}
				
			}
		}
	}
	if(get_col_of_zone(vert.xz)==brightZone){
		ALBEDO=mix(ALBEDO,get_col_of_zone(vert.xz)+vec3(1.0)*round((sin((TIME/20.0+vert.x+vert.z)*80.0)+1.0)/2.0),mixing);
	}
	else{
		ALBEDO=mix(ALBEDO,get_col_of_zone(vert.xz),mixing);
	}
	
	
	
}


"
